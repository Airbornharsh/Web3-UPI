// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  walletAddress String   @unique
  pin           String
  walletBalance String   @default("0")
  Locked        Boolean  @default(false)
  upiId         String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  senderTransaction    Transaction[]          @relation("sender")
  receiverTransaction  Transaction[]          @relation("receiver")
  ClaimedSol           ClaimedSol[]
  OperationTransaction OperationTransaction[]
  Transaction          Transaction[]
}

model OperationTransaction {
  id        Int       @id @default(autoincrement())
  userId    Int
  amount    String
  signature String
  operation OPERATION
  fee       String    @default("0")
  status    Status    @default(PENDING)
  createdAt DateTime  @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Transaction {
  id         Int      @id @default(autoincrement())
  senderId   Int
  recieverId Int
  amount     String
  signature  String
  Status     Status   @default(PENDING)
  createdAt  DateTime @default(now())

  sender   User  @relation("sender", fields: [senderId], references: [id])
  receiver User  @relation("receiver", fields: [recieverId], references: [id])
  User     User? @relation(fields: [userId], references: [id])
  userId   Int?
}

model ClaimedSol {
  id            Int      @id @default(autoincrement())
  userId        Int
  walletAddress String
  createdAt     DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

enum Status {
  PENDING
  COMPLETED
  FAILED
}

enum OPERATION {
  PREDEPOSIT
  DEPOSIT
  WITHDRAW
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
